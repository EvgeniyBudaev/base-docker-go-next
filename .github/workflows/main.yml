name: main

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build_and_push_to_docker_hub:
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2 # Проверяет доступность репозитория DockerHub для workflow
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1 # Вызывает сборщик контейнеров docker
      - name: Login to Docker
        uses: docker/login-action@v1 # Запуск скрипта авторизации на DockerHub
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push web to Docker Hub
        uses: docker/build-push-action@v2
        with:
          context: ./web
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/gonext_web:v1

  deploy:
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: build_and_push_to_docker_hub
    steps:
      - name: executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
#            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/gonext_web:v1
            sudo docker-compose stop
            sudo docker-compose rm -f backend
            rm .env
            touch .env
            echo API_PORT=${{ secrets.API_PORT }} >> .env
            echo API_LOGGER_LEVEL=${{ secrets.API_LOGGER_LEVEL }} >> .env
            echo NEXT_PUBLIC_API_URL=${{ secrets.NEXT_PUBLIC_API_URL }} >> .env
            echo NEXT_PUBLIC_NODE_ENV=${{ secrets.NEXT_PUBLIC_NODE_ENV }} >> .env
#            sudo docker-compose up -d --build
